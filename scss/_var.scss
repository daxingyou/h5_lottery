// 變數
$l_gray:#DDE2E6;
$l_blue:#52ACD3;
$l_yellow:#FEA305;
$l_green:#71C341;
$l_red:#E03A5D;
// 圓角  用法 @include border-radius(數值);
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}
// media query 用法 @include respond-to('尺寸(ex:sm,xs..)') {}
$breakpoints: (
    'ss': ( max-width: 359px),
    'xs': ( max-width: 480px),
    'sm': ( max-width: 576px),
    'md': ( max-width: 768px),
    'lg': ( max-width: 992px),
    'xl': ( max-width: 1200px)) !default;
    /// Mixin to manage responsive breakpoints
    /// @author Hugo Giraudel
    /// @param {String} $breakpoint - Breakpoint name
    /// @require $breakpoints
    @mixin respond-to($breakpoint) {
        // If the key exists in the map
        @if map-has-key($breakpoints,
        $breakpoint) {
            // Prints a media query based on the value
            @media #{inspect(map-get($breakpoints, $breakpoint))} {
                @content;
            }
        }
        // If the key doesn't exist in the map
        @else {
            @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "+"Available breakpoints are: #{map-keys($breakpoints)}.";
        }
}